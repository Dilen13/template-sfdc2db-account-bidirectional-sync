<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:db="http://www.mulesoft.org/schema/mule/db"
      xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
      xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
      version="EE-3.5.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd">
    <data-mapper:config name="Account_To_Account" transformationGraphPath="account_to_account.grf" doc:name="Account_To_Account"/>
    <data-mapper:config name="Account_To_Account_1" transformationGraphPath="account_to_account_1.grf" doc:name="Account_To_Account_1"/>
    <data-mapper:config name="Account_To_Account_1Account_To_Account_2" transformationGraphPath="account_to_account_2.grf" doc:name="Account_To_Account_1Account_To_Account_2"/>

	<batch:job name="syncAccountsBatch">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:process-records>

			<batch:step name="getAccountInDatabaseStep" accept-expression="#['Salesforce'.equals(flowVars['sourceSystem'])]">
				<enricher
					source="#[payload.isEmpty() ? NullPayload.getInstance() : payload[0]]"
					target="#[recordVars['accountInTargetInstance']]" doc:name="store result in record var 'accountInTargetInstance'">
                    <processor-chain doc:name="Processor Chain">
                        <set-payload value="#[org.mule.templates.testutils.MockedPayload.generate()]" doc:name="set payload with mocked database query result"/>
                    </processor-chain>
				</enricher>
                <custom-transformer class="org.mule.templates.transformers.MapValuesToStringTransformer" doc:name="transform accountInTargetInstance values to String"/>
                <batch:set-record-variable variableName="accountInTargetInstance" value="#[flowVars['newAccountInTargetInstance']]" doc:name="set accountInTargetInstance with new Map"/>
                <logger message="************************************  Accept Expression for the next Batch Step: #['Salesforce'.equals(flowVars['sourceSystem']) &amp;&amp; !(recordVars['accountInTargetInstance'] is NullPayload) &amp;&amp; org.mule.templates.util.DateUtils.isAfter(org.mule.templates.util.DateUtils.dateStringToISODateString(payload['LastModifiedDate'], '${sfdc.date.format}', '${sfdc.date.offset}'), org.mule.templates.util.DateUtils.dateStringToISODateString(recordVars['accountInTargetInstance']['lastmodifieddate'].toString(), '${database.date.format}', '${database.date.offset}')) &amp;&amp; '${sfdc.integration.user.id}' != payload.get('LastModifiedById')]" level="INFO" doc:name="log the result of the Accept Expression for the next Batch Step"/>
			</batch:step>

			<batch:step name="updateAccountInDatabaseStep" accept-expression="'Salesforce'.equals(flowVars['sourceSystem']) &amp;&amp; !(recordVars['accountInTargetInstance'] is NullPayload) &amp;&amp; org.mule.templates.util.DateUtils.isAfter(org.mule.templates.util.DateUtils.dateStringToISODateString(payload['LastModifiedDate'], '${sfdc.date.format}', '${sfdc.date.offset}'), org.mule.templates.util.DateUtils.dateStringToISODateString(recordVars['accountInTargetInstance']['lastmodifieddate'].toString(), '${database.date.format}', '${database.date.offset}')) &amp;&amp; '${sfdc.integration.user.id}' != payload.get('LastModifiedById')">
                <logger message="************************************ You are into the Step!" level="INFO" doc:name="Logger"/>
			</batch:step>

		</batch:process-records>
	</batch:job>
	
		<batch:job name="syncAccountsWithoutWorkaroundBatch">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:process-records>

			<batch:step name="getAccountInDatabaseWithoutWorkaroundStep" accept-expression="#['Salesforce'.equals(flowVars['sourceSystem'])]">
				<enricher
					source="#[payload.isEmpty() ? NullPayload.getInstance() : payload[0]]"
					target="#[recordVars['accountInTargetInstance']]" doc:name="store result in record var 'accountInTargetInstance'">
                    <processor-chain doc:name="Processor Chain">
                        <set-payload value="#[org.mule.templates.testutils.MockedPayload.generate()]" doc:name="set payload with mocked database query result"/>
                    </processor-chain>
				</enricher>
                <!-- <custom-transformer class="org.mule.templates.transformers.MapValuesToStringTransformer" doc:name="transform accountInTargetInstance values to String"/>
                <batch:set-record-variable variableName="accountInTargetInstance" value="#[flowVars['newAccountInTargetInstance']]" doc:name="set accountInTargetInstance with new Map"/> -->
                <logger message="************************************  Accept Expression for the next Batch Step: #['Salesforce'.equals(flowVars['sourceSystem']) &amp;&amp; !(recordVars['accountInTargetInstance'] is NullPayload) &amp;&amp; org.mule.templates.util.DateUtils.isAfter(org.mule.templates.util.DateUtils.dateStringToISODateString(payload['LastModifiedDate'], '${sfdc.date.format}', '${sfdc.date.offset}'), org.mule.templates.util.DateUtils.dateStringToISODateString(recordVars['accountInTargetInstance']['lastmodifieddate'].toString(), '${database.date.format}', '${database.date.offset}')) &amp;&amp; '${sfdc.integration.user.id}' != payload.get('LastModifiedById')]" level="INFO" doc:name="log the result of the Accept Expression for the next Batch Step"/>
			</batch:step>

			<batch:step name="updateAccountInDatabaseWithoutWorkaroundStep" accept-expression="'Salesforce'.equals(flowVars['sourceSystem']) &amp;&amp; !(recordVars['accountInTargetInstance'] is NullPayload) &amp;&amp; org.mule.templates.util.DateUtils.isAfter(org.mule.templates.util.DateUtils.dateStringToISODateString(payload['LastModifiedDate'], '${sfdc.date.format}', '${sfdc.date.offset}'), org.mule.templates.util.DateUtils.dateStringToISODateString(recordVars['accountInTargetInstance']['lastmodifieddate'].toString(), '${database.date.format}', '${database.date.offset}')) &amp;&amp; '${sfdc.integration.user.id}' != payload.get('LastModifiedById')">
                <logger message="************************************ You are into the Step!" level="INFO" doc:name="Logger"/>
			</batch:step>

		</batch:process-records>
	</batch:job>

</mule>
